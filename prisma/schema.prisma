generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Company {
  idCompany                     Int             @id @default(autoincrement())
  CompanyName                   String          @db.VarChar(45)
  CompanyAddress                String?         @db.VarChar(80)
  CompanyImagePath              String?         @db.VarChar(255)
  CompanyEmail                  String?         @db.VarChar(255)
  CompanyContactName            String?         @db.VarChar(255)
  CompanyCode                   String?         @db.VarChar(45)
  CompanyNIT                    String?         @db.VarChar(45)
  CompanyPhone                  String?         @db.VarChar(45)
  companyStatus_idcompanyStatus Int
  CompanyRole_idCompanyRole     Int
  companyType_idcompanyType     Int
  CompanyRole                   CompanyRole     @relation(fields: [CompanyRole_idCompanyRole], references: [idCompanyRole], onDelete: NoAction, onUpdate: NoAction, map: "fk_Company_CompanyRole1")
  companyStatus                 companyStatus   @relation(fields: [companyStatus_idcompanyStatus], references: [idcompanyStatus], onDelete: NoAction, onUpdate: NoAction, map: "fk_Company_companyStatus1")
  companyType                   companyType     @relation(fields: [companyType_idcompanyType], references: [idcompanyType], onDelete: NoAction, onUpdate: NoAction, map: "fk_Company_companyType1")
  DesignCompany                 DesignCompany[]
  office                        office[]

  @@index([CompanyRole_idCompanyRole], map: "fk_Company_CompanyRole1_idx")
  @@index([companyStatus_idcompanyStatus], map: "fk_Company_companyStatus1_idx")
  @@index([companyType_idcompanyType], map: "fk_Company_companyType1_idx")
}

model CompanyRole {
  idCompanyRole   Int       @id @default(autoincrement())
  CompanyRoleName String    @db.VarChar(45)
  Company         Company[]
}

model Design {
  idDesign                Int                       @id @default(autoincrement())
  DesignImagePath         String?                   @db.VarChar(255)
  DesignName              String?                   @db.VarChar(45)
  DesignSellPrice         Float?
  DesignType_idDesignType Int
  DesignType              DesignType                @relation(fields: [DesignType_idDesignType], references: [idDesignType], onDelete: NoAction, onUpdate: NoAction, map: "fk_Design_DesignType1")
  DesignCompany           DesignCompany[]
  quotationProductDetails quotationProductDetails[]

  @@index([DesignType_idDesignType], map: "fk_Design_DesignType1_idx")
}

model DesignColors {
  idDesignColors             Int                          @id @default(autoincrement())
  DesignColorName            String?                      @db.VarChar(45)
  DesignColorPath            String?                      @db.VarChar(255)
  DesignType_idDesignType    Int
  DesignType                 DesignType                   @relation(fields: [DesignType_idDesignType], references: [idDesignType], onDelete: NoAction, onUpdate: NoAction, map: "fk_DesignColors_DesignType1")
  DesignColors_has_quotation DesignColors_has_quotation[]

  @@index([DesignType_idDesignType], map: "fk_DesignColors_DesignType1_idx")
}

model DesignCompany {
  idDesignCompany       Int     @id @default(autoincrement())
  DesignCompanyBuyPrice Float?
  Company_idCompany     Int
  Design_idDesign       Int
  Company               Company @relation(fields: [Company_idCompany], references: [idCompany], onDelete: NoAction, onUpdate: NoAction, map: "fk_DesignCompany_Company1")
  Design                Design  @relation(fields: [Design_idDesign], references: [idDesign], onDelete: NoAction, onUpdate: NoAction, map: "fk_DesignCompany_Design1")

  @@index([Company_idCompany], map: "fk_DesignCompany_Company1_idx")
  @@index([Design_idDesign], map: "fk_DesignCompany_Design1_idx")
}

model DesignType {
  idDesignType               Int                          @id @default(autoincrement())
  DesignTypeName             String?                      @db.VarChar(45)
  DesignTypeIconPath         String?                      @db.VarChar(255)
  MosaicType_idMosaicType    Int
  Design                     Design[]
  DesignColors               DesignColors[]
  MosaicType                 MosaicType                   @relation(fields: [MosaicType_idMosaicType], references: [idMosaicType], onDelete: NoAction, onUpdate: NoAction, map: "fk_DesignType_MosaicType1")
  DesignTypeFormatSize       DesignTypeFormatSize[]
  DesignType_EnvironmentType DesignType_EnvironmentType[]

  @@index([MosaicType_idMosaicType], map: "fk_DesignType_MosaicType1_idx")
}

model DesignTypeFormatSize {
  idDesignTypeFormatSize     Int                 @id @default(autoincrement())
  DesignTypeFormatSizeName   String?             @db.VarChar(45)
  DesignType_idDesignType    Int
  DesignTypeFormatSizeHeight String?             @db.VarChar(255)
  DesignTypeFormatSizeWidht  String?             @db.VarChar(255)
  DesignType                 DesignType          @relation(fields: [DesignType_idDesignType], references: [idDesignType], onDelete: NoAction, onUpdate: NoAction, map: "fk_DesignTypeFormatSize_DesignType1")
  FormatSizeTexture          FormatSizeTexture[]

  @@index([DesignType_idDesignType], map: "fk_DesignTypeFormatSize_DesignType1_idx")
}

model DesignType_EnvironmentType {
  DesignType_EnvironmentTypecol     Int             @id @default(autoincrement())
  DesignType_idDesignType           Int
  EnvironmentType_idEnvironmentType Int
  DesignType                        DesignType      @relation(fields: [DesignType_idDesignType], references: [idDesignType], onDelete: NoAction, onUpdate: NoAction, map: "fk_DesignType_has_EnvironmentType_DesignType1")
  EnvironmentType                   EnvironmentType @relation(fields: [EnvironmentType_idEnvironmentType], references: [idEnvironmentType], onDelete: NoAction, onUpdate: NoAction, map: "fk_DesignType_has_EnvironmentType_EnvironmentType1")

  @@index([DesignType_idDesignType], map: "fk_DesignType_has_EnvironmentType_DesignType1_idx")
  @@index([EnvironmentType_idEnvironmentType], map: "fk_DesignType_has_EnvironmentType_EnvironmentType1_idx")
}

model Environment {
  idEnvironment                     Int             @id @default(autoincrement())
  EnvironmentName                   String?         @db.VarChar(45)
  EnvironmentType_idEnvironmentType Int
  EnvironmentProfileImage           String?         @db.VarChar(255)
  EnvironmentMaksImage              String?         @db.VarChar(255)
  EnvironmentAngle                  String?         @db.VarChar(255)
  EnvironmentType                   EnvironmentType @relation(fields: [EnvironmentType_idEnvironmentType], references: [idEnvironmentType], onDelete: NoAction, onUpdate: NoAction, map: "fk_Environment_EnvironmentType1")

  @@index([EnvironmentType_idEnvironmentType], map: "fk_Environment_EnvironmentType1_idx")
}

model EnvironmentType {
  idEnvironmentType          Int                          @id @default(autoincrement())
  EnvironmentTypeName        String?                      @db.VarChar(45)
  EnvironmentTypeImage       String?                      @db.VarChar(255)
  DesignType_EnvironmentType DesignType_EnvironmentType[]
  Environment                Environment[]
}

model FormatSizeTexture {
  idFormatSizeTexture                         Int                  @id @default(autoincrement())
  DesignTypeFormatSize_idDesignTypeFormatSize Int
  FormatSizeTextureName                       String?              @db.VarChar(45)
  FormatSizeTextureMaskPath                   String?              @db.VarChar(255)
  DesignTypeFormatSize                        DesignTypeFormatSize @relation(fields: [DesignTypeFormatSize_idDesignTypeFormatSize], references: [idDesignTypeFormatSize], onDelete: NoAction, onUpdate: NoAction, map: "fk_FormatSizeTexture_DesignTypeFormatSize1")
  bundle                                      bundle[]
  quotation                                   quotation[]

  @@index([DesignTypeFormatSize_idDesignTypeFormatSize], map: "fk_FormatSizeTexture_DesignTypeFormatSize1_idx")
}

model SystemSetup {
  idSystemSetup                 Int    @id @default(autoincrement())
  SystemSetupGarbagePercenttage Float?
}

model brecha {
  idbrecha        Int         @id @default(autoincrement())
  brechaName      String?     @db.VarChar(45)
  brechaColorPath String?     @db.VarChar(255)
  brechacol       String?     @db.VarChar(45)
  quotation       quotation[]
}

model companyStatus {
  idcompanyStatus   Int       @id @default(autoincrement())
  companyStatusName String    @db.VarChar(45)
  Company           Company[]
}

model sysUser {
  idsysuser               Int         @id @default(autoincrement())
  userName                String      @db.VarChar(45)
  lastName                String      @db.VarChar(45)
  email                   String      @unique(map: "email_UNIQUE") @db.VarChar(80)
  phone                   String?     @db.VarChar(50)
  password                String      @db.VarChar(255)
  tempPassword            String?     @db.VarChar(255)
  tempPasswordExpDate     DateTime?   @db.DateTime(0)
  creationDate            DateTime    @db.DateTime(0)
  userRole_iduserRole     Int
  userStatus_iduserStatus Int
  office_idoffice         Int
  quotation               quotation[]
  office                  office      @relation(fields: [office_idoffice], references: [idoffice], onDelete: NoAction, onUpdate: NoAction, map: "fk_sysUser_office1")
  userRole                userRole    @relation(fields: [userRole_iduserRole], references: [iduserRole], onDelete: NoAction, onUpdate: NoAction, map: "fk_sysuser_userRole")
  userStatus              userStatus  @relation(fields: [userStatus_iduserStatus], references: [iduserStatus], onDelete: NoAction, onUpdate: NoAction, map: "fk_sysuser_userStatus1")

  @@index([userRole_iduserRole], map: "fk_sysuser_userRole_idx")
  @@index([userStatus_iduserStatus], map: "fk_sysuser_userStatus1_idx")
  @@index([office_idoffice], map: "fk_sysUser_office1_idx")
}

model userRole {
  iduserRole Int       @id @default(autoincrement())
  roleName   String    @db.VarChar(45)
  sysUser    sysUser[]
}

model userStatus {
  iduserStatus          Int       @id @default(autoincrement())
  userStatusDescription String    @db.VarChar(45)
  sysUser               sysUser[]
}

model MosaicType {
  idMosaicType    Int          @id @default(autoincrement())
  MosaicTypeName  String       @db.VarChar(45)
  MosaicTypeValue Int
  DesignType      DesignType[]
}

model DesignColors_has_quotation {
  idDesignColorQuotation      Int          @id @default(autoincrement())
  DesignColors_idDesignColors Int
  DesignColors_Index          Int
  quotation_idquotation       Int
  DesignColors                DesignColors @relation(fields: [DesignColors_idDesignColors], references: [idDesignColors], onDelete: NoAction, onUpdate: NoAction, map: "fk_DesignColors_has_quotation_DesignColors1")
  quotation                   quotation    @relation(fields: [quotation_idquotation], references: [idquotation], onDelete: NoAction, onUpdate: NoAction, map: "fk_DesignColors_has_quotation_quotation1")

  @@index([DesignColors_idDesignColors], map: "fk_DesignColors_has_quotation_DesignColors1_idx")
  @@index([quotation_idquotation], map: "fk_DesignColors_has_quotation_quotation1_idx")
}

model bundle {
  idbundle                              Int                   @id @default(autoincrement())
  bundleBasePrice                       Float?
  FormatSizeTexture_idFormatSizeTexture Int
  FormatSizeTexture                     FormatSizeTexture     @relation(fields: [FormatSizeTexture_idFormatSizeTexture], references: [idFormatSizeTexture], onDelete: NoAction, onUpdate: NoAction, map: "fk_bundle_FormatSizeTexture1")
  bundleCompanyPrice                    bundleCompanyPrice[]
  bundle_PricesByZone                   bundle_PricesByZone[]

  @@index([FormatSizeTexture_idFormatSizeTexture], map: "fk_bundle_FormatSizeTexture1_idx")
}

model bundleCompanyPrice {
  idbundleCompanyPrice      Int         @id @default(autoincrement())
  bundle_idbundle           Int
  companyZone_idcompanyZone Int
  companyType_idcompanyType Int
  price                     Float?
  bundle                    bundle      @relation(fields: [bundle_idbundle], references: [idbundle], onDelete: NoAction, onUpdate: NoAction, map: "fk_bundleCompanyPrice_bundle1")
  companyType               companyType @relation(fields: [companyType_idcompanyType], references: [idcompanyType], onDelete: NoAction, onUpdate: NoAction, map: "fk_bundleCompanyPrice_companyType1")
  companyZone               companyZone @relation(fields: [companyZone_idcompanyZone], references: [idcompanyZone], onDelete: NoAction, onUpdate: NoAction, map: "fk_bundleCompanyPrice_companyZone1")
  quotation                 quotation[]

  @@index([bundle_idbundle], map: "fk_bundleCompanyPrice_bundle1_idx")
  @@index([companyType_idcompanyType], map: "fk_bundleCompanyPrice_companyType1_idx")
  @@index([companyZone_idcompanyZone], map: "fk_bundleCompanyPrice_companyZone1_idx")
}

model bundle_PricesByZone {
  bundle_has_companyZonecol Int         @id @default(autoincrement())
  bundle_idbundle           Int
  companyZone_idcompanyZone Int
  price                     Float?
  bundle                    bundle      @relation(fields: [bundle_idbundle], references: [idbundle], onDelete: NoAction, onUpdate: NoAction, map: "fk_bundle_has_companyZone_bundle1")
  companyZone               companyZone @relation(fields: [companyZone_idcompanyZone], references: [idcompanyZone], onDelete: NoAction, onUpdate: NoAction, map: "fk_bundle_has_companyZone_companyZone1")

  @@index([bundle_idbundle], map: "fk_bundle_has_companyZone_bundle1_idx")
  @@index([companyZone_idcompanyZone], map: "fk_bundle_has_companyZone_companyZone1_idx")
}

model companyType {
  idcompanyType          Int                  @id @default(autoincrement())
  companyTypeDescription String?              @db.VarChar(45)
  Company                Company[]
  bundleCompanyPrice     bundleCompanyPrice[]
}

model companyZone {
  idcompanyZone       Int                   @id @default(autoincrement())
  companyZoneName     String?               @db.VarChar(80)
  bundleCompanyPrice  bundleCompanyPrice[]
  bundle_PricesByZone bundle_PricesByZone[]
  office              office[]
}

model office {
  idoffice                  Int         @id @default(autoincrement())
  officeDescription         String?     @db.VarChar(45)
  Company_idCompany         Int
  companyZone_idcompanyZone Int
  Company                   Company     @relation(fields: [Company_idCompany], references: [idCompany], onDelete: NoAction, onUpdate: NoAction, map: "fk_office_Company1")
  companyZone               companyZone @relation(fields: [companyZone_idcompanyZone], references: [idcompanyZone], onDelete: NoAction, onUpdate: NoAction, map: "fk_office_companyZone1")
  sysUser                   sysUser[]

  @@index([Company_idCompany], map: "fk_office_Company1_idx")
  @@index([companyZone_idcompanyZone], map: "fk_office_companyZone1_idx")
}

model quotation {
  idquotation                             Int                          @id @default(autoincrement())
  customerName                            String                       @db.VarChar(45)
  customerLastname                        String                       @db.VarChar(45)
  customerEmail                           String                       @db.VarChar(80)
  customerPhoneNumber                     String                       @db.VarChar(45)
  quotationBundlePrice                    Float
  quotationPrice                          Float
  quotationWidth                          Float
  quotationHeight                         Float
  quotationDate                           DateTime                     @db.DateTime(0)
  quotationCompanyPrice                   Float
  FormatSizeTexture_idFormatSizeTexture   Int
  bundleCompanyPrice_idbundleCompanyPrice Int
  sysUser_idsysuser                       Int
  quotationStatus_idquotationStatus       Int
  brecha_idbrecha                         Int
  DesignColors_has_quotation              DesignColors_has_quotation[]
  FormatSizeTexture                       FormatSizeTexture            @relation(fields: [FormatSizeTexture_idFormatSizeTexture], references: [idFormatSizeTexture], onDelete: NoAction, onUpdate: NoAction, map: "fk_quotation_FormatSizeTexture1")
  brecha                                  brecha                       @relation(fields: [brecha_idbrecha], references: [idbrecha], onDelete: NoAction, onUpdate: NoAction, map: "fk_quotation_brecha1")
  bundleCompanyPrice                      bundleCompanyPrice           @relation(fields: [bundleCompanyPrice_idbundleCompanyPrice], references: [idbundleCompanyPrice], onDelete: NoAction, onUpdate: NoAction, map: "fk_quotation_bundleCompanyPrice1")
  quotationStatus                         quotationStatus              @relation(fields: [quotationStatus_idquotationStatus], references: [idquotationStatus], onDelete: NoAction, onUpdate: NoAction, map: "fk_quotation_quotationStatus1")
  sysUser                                 sysUser                      @relation(fields: [sysUser_idsysuser], references: [idsysuser], onDelete: NoAction, onUpdate: NoAction, map: "fk_quotation_sysUser1")
  quotationProductDetails                 quotationProductDetails[]

  @@index([FormatSizeTexture_idFormatSizeTexture], map: "fk_quotation_FormatSizeTexture1_idx")
  @@index([bundleCompanyPrice_idbundleCompanyPrice], map: "fk_quotation_bundleCompanyPrice1_idx")
  @@index([sysUser_idsysuser], map: "fk_quotation_sysUser1_idx")
  @@index([brecha_idbrecha], map: "fk_quotation_brecha1_idx")
  @@index([quotationStatus_idquotationStatus], map: "fk_quotation_quotationStatus1_idx")
}

model quotationProductDetails {
  idquotationDetails    Int       @id @default(autoincrement())
  Design_idDesign       Int
  quotation_idquotation Int
  quotationProductUnits Int?
  Design                Design    @relation(fields: [Design_idDesign], references: [idDesign], onDelete: NoAction, onUpdate: NoAction, map: "fk_quotationProductDetails_Design1")
  quotation             quotation @relation(fields: [quotation_idquotation], references: [idquotation], onDelete: NoAction, onUpdate: NoAction, map: "fk_quotationProductDetails_quotation1")

  @@index([Design_idDesign], map: "fk_quotationProductDetails_Design1_idx")
  @@index([quotation_idquotation], map: "fk_quotationProductDetails_quotation1_idx")
}

model quotationStatus {
  idquotationStatus          Int         @id @default(autoincrement())
  quotationStatusDescription String?     @db.VarChar(45)
  quotation                  quotation[]
}
